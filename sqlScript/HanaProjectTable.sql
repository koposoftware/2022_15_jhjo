--SEQUENCE 생성
DROP SEQUENCE TRAN_HISTORY_NUM;
CREATE SEQUENCE TRAN_HISTORY_NUM 
INCREMENT BY 1
START WITH 1 
MAXVALUE 999999999999999
CACHE 30;

DROP SEQUENCE CUSTOMER_NUM;
CREATE SEQUENCE CUSTOMER_NUM 
INCREMENT BY 1
START WITH 1 
MAXVALUE 999999999999999
CACHE 30;

DROP SEQUENCE CARD_SEQUENCE_NUM;
CREATE SEQUENCE CARD_SEQUENCE_NUM 
INCREMENT BY 1
START WITH 1 
MAXVALUE 999999999999999
CACHE 30;

SELECT * FROM USER_SEQUENCES;

DROP SEQUENCE CALENDAR_SEQ;

CREATE SEQUENCE CALENDAR_SEQ START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 99999;


DELETE FROM CUSTOMER_INFO;
DELETE FROM CUSTOMER_CARD_INFO;
DELETE FROM TRAN_INFO;
DROP TABLE CLUSTERED_CUSTOMER;
DELETE FROM CARD_CART;
COMMIT;

SELECT * FROM CUSTOMER_INFO ORDER BY MEMBER_NUM;

SELECT COUNT(GENDER) FROM 
CLUSTERED_CUSTOMER A,
CUSTOMER_INFO B 
WHERE A.MEMBER_NUM = B.MEMBER_NUM AND A.CLUSTERED=5 GROUP BY GENDER;

SELECT * FROM TRAN_VIEW;

CREATE TABLE CUSTOMER_INFO(
    MEMBER_NUM NUMBER(10) DEFAULT CUSTOMER_NUM.NEXTVAL, --PRIMARY KEY,
    NAME   VARCHAR2(20), --NOT NULL,
    IDENTITY VARCHAR2(30), --NOT NULL,
    PASSWORD VARCHAR2(30), --NOT NULL,
    RES_DATE VARCHAR2(40),-- NOT NULL,
    GENDER VARCHAR2(10), --NOT NULL,
    PHONE_NUM VARCHAR2(30), --NOT NULL,
    EMAIL_ADDRESS VARCHAR2(100), --NOT NULL,
    ADDRESS VARCHAR2(200),
    DOMESTIC_STATUS VARCHAR(2), --NOT NULL
    USER_TYPE VARCHAR2(5) DEFAULT 'U'
);

--DROP TABLE CUSTOMER_CARD_INFO;
CREATE TABLE CUSTOMER_CARD_INFO(
    CARD_NUM VARCHAR2(30),
    MEMBER_NUM NUMBER(10) DEFAULT CARD_SEQUENCE_NUM.NEXTVAL,
    CARD_CATE_NUM VARCHAR2(30),
    CARD_PWD VARCHAR2(10),
    VALID_DATE VARCHAR2(30),
    CVC_NUM VARCHAR2(10),
    CARD_RES_DUE VARCHAR2(30)
);

CREATE TABLE CARD_INFO(
    CARD_NAME VARCHAR2(120),
    ANNUAL_FEE_CODE VARCHAR2(10),
    CARD_CATE_NUM VARCHAR(20),
    CARD_SEG_NUM VARCHAR2(20),
    ANNUAL_FEE NUMBER(20),
    SORT_CARD VARCHAR2(30)
);
--DROP TABLE ANNUAL_FEE;
CREATE TABLE ANNUAL_FEE(
    ANNUAL_FEE_CODE VARCHAR2(10), --PRIMARY KEY,
    NETWORK VARCHAR2(10) --UNIQUE NOT NULL
);
--DROP TABLE BENE_INFO;
CREATE TABLE BENE_INFO(
    ALI_CODE VARCHAR2(20), --NOT NULL,
    INDUSTRY_CODE VARCHAR2(20), --NOT NULL,
    BENE_CODE VARCHAR2(20) --PRIMARY KEY
);

CREATE TABLE ALI_INFO(
    ALI_CODE VARCHAR2(20), --PRIMARY KEY,
    ALI_TYPE VARCHAR2(50) --UNIQUE NOT NULL
);

SELECT * FROM ALI_INFO;

CREATE TABLE CARD_BENE(
    BENE_CODE VARCHAR2(20),
    CARD_CATE_NUM VARCHAR2(20),
    BENE_TYPE VARCHAR2(20),
    BENE_LIMIT NUMBER(10),
    BASE_PERFORM NUMBER(8),
    BENE_RATE NUMBER(5,3)
    
   -- CONSTRAINT CARD_BENE_CATEGORY PRIMARY KEY(BENE_CODE,CARD_SEG_NUM)
);

--ALTER TABLE CARD_BENE DROP CONSTRAINT CARD_BENE_CATEGORY;


-- INDU_TYPE은 EXCEL로 IMPORT함. 
--CREATE TABLE INDU_CODE(
   -- INDUSTRY_CODE VARCHAR2(30) PRIMARY KEY,
   -- LAR_CATE VARCHAR2(30) NOT NULL,
   -- MID_CATE VARCHAR2(30) NOT NULL,
   -- SMA_CATE VARCHAR2(30) NOT NULL
--);

--DROP TABLE TRAN_CATE;

CREATE TABLE TRAN_CATE(
    TRAN_CATE_NUM  VARCHAR2(20), --PRIMARY KEY,
    ALI_CODE VARCHAR2(20), --NOT NULL,
    INDUSTRY_CODE VARCHAR2(6) --NOT NULL
);

--DROP TABLE TRAN_INFO;

CREATE TABLE TRAN_INFO(
    TRAN_NUM NUMBER(10) DEFAULT TRAN_HISTORY_NUM.NEXTVAL,
    MEMBER_NUM NUMBER(10),-- NOT NULL,
    CARD_NUM VARCHAR2(30), --NOT NULL,
    DATE_OF_USE VARCHAR2(40), --NOT NULL, 
    TRAN_CATE_NUM VARCHAR2(50), --NOT NULL,
    AMOUNT_OF_BUSI NUMBER(10) --NOT NULL
);


CREATE TABLE CARD_CART(
    MEMBER_NUM NUMBER(10),
    WISH_CARD VARCHAR2(20)
);



CREATE TABLE CARD_IMG(
    CARD_CATE_NUM VARCHAR2(8),
    IMG_URL VARCHAR2(150)
);

CREATE TABLE CLUSTERED_CUSTOMER(
    CLUSTERED VARCHAR2(10),
    MEMBER_NUM NUMBER(10)
);


CREATE TABLE NETWORK_IMG(
    ANNUAL_FEE_CODE VARCHAR2(20),
    IMG_URL VARCHAR2(150)
);

--계좌 테이블 생성중 

CREATE TABLE ACCOUNT(
    MEMBER_NUM NUMBER(10),
    ACCOUNT_NUMBER VARCHAR2(30),
    CARD_NUMBER VARCHAR2(30),
    ACCOUNT_COMMENT VARCHAR2(50)
);

CREATE TABLE CALENDAR(
	ID NUMBER DEFAULT CALENDAR_SEQ.NEXTVAL,
	GROUP_ID NUMBER(10),
	TITLE VARCHAR2(50),
	WRITER VARCHAR2(50),
	CONTENT VARCHAR2(300),
	START_1 VARCHAR2(100),
	END_1 VARCHAR2(100),
	ALL_DAY NUMBER(1),
	TEXT_COLOR VARCHAR2(50),
	BACKGROUND_COLOR VARCHAR2(50),
	BORDER_COLOR VARCHAR2(50),
    READ_STATUS VARCHAR2(5) DEFAULT 'N'
);

--DELETE FROM CALENDAR;
COMMIT;

SELECT 
ID,GROUP_ID,TITLE,WRITER,CONTENT,
TO_CHAR(TO_DATE(START_1,'YYYY-MM-DD HH24:MI:SS'),'YYYY-MM-DD HH24:MI:SS') AS START_1,
TO_CHAR(TO_DATE(END_1,'YYYY-MM-DD HH24:MI:SS'),'YYYY-MM-DD HH24:MI:SS') AS END_1,
ALL_DAY,TEXT_COLOR,BACKGROUND_COLOR,BORDER_COLOR 
FROM CALENDAR;

SELECT SYSDATE+1 FROM DUAL;

SELECT 
ID,GROUP_ID,TITLE,WRITER,CONTENT,
TO_DATE(START_1,'YYYY-MM-DD HH24:MI:SS') AS START_1,
TO_DATE(END_1,'YYYY-MM-DD HH24:MI:SS') AS END_1,
ALL_DAY,TEXT_COLOR,BACKGROUND_COLOR,BORDER_COLOR 
FROM CALENDAR;

--계좌 생성 중! 



INSERT INTO ACCOUNT(MEMBER_NUM,ACCOUNT_NUMBER,CARD_NUMBER,ACCOUNT_COMMENT) VALUES(23,'485811-53-127785','6504-6457-2025-4231','급여 통장');
INSERT INTO ACCOUNT(MEMBER_NUM,ACCOUNT_NUMBER,CARD_NUMBER,ACCOUNT_COMMENT) VALUES(23,'352150-70-851456','1594-7999-5439-3711','생활비 통장');
COMMIT;


--SELECT * FROM CUSTOMER_CARD_INFO;

--DROP TABLE CUSTOMER_INFO;
--DROP TABLE CUSTOMER_CARD_INFO;
--DROP TABLE CARD_INFO;
--DROP TABLE ANNUAL_FEE;
--DROP TABLE BENE_INFO;
--DROP TABLE ALI_INFO;
--DROP TABLE ALI_BENE;
--DROP TABLE TRAN_CATE;
--DROP TABLE TRAN_INFO;
--DROP TABLE CARD_BENE;
--DROP TABLE TRANSACTION;
--DROP TABLE COMP;
--DROP TABLE ALI;
--DROP TABLE CARD_IMG;





SELECT TITLE,CONTENT,START_1 FROM CALENDAR WHERE
TO_DATE(START_1,'YYYY-MM-DD HH24:MI:SS')
BETWEEN SYSDATE AND SYSDATE+5
AND
GROUP_ID = 23
AND READ_STATUS = 'N';	
SELECT * FROM CALENDAR;

UPDATE CALENDAR 
SET READ_STATUS = 'Y' 
WHERE GROUP_ID=${memberNum} AND TO_DATE(START_1,'YYYY-MM-DD HH24:MI:SS')
BETWEEN SYSDATE AND SYSDATE+5


SELECT COUNT(*) FROM CALENDAR WHERE
TO_DATE(START_1,'YYYY-MM-DD HH24:MI:SS')
BETWEEN SYSDATE AND SYSDATE+5
AND
GROUP_ID = 23
AND READ_STATUS = 'N';	


