--통계 자료를 위해 VIEW를 사용했음. 
--DROP MATERIALIZED VIEW CLUSTERED_STATIC_VIEW;

CREATE MATERIALIZED VIEW CLUSTERED_STATIC_VIEW
BUILD IMMEDIATE
REFRESH ON DEMAND
AS 
SELECT A.CLUSTERED,B.SMALL_CATE,ROUND(SUM(B.AMOUNT_OF_BUSI)/3) AS AMOUNT_OF_BUSI,COUNT(B.SMALL_CATE) AS COUNT FROM  
(SELECT * 
FROM CLUSTERED_CUSTOMER) A,(SELECT B.MEMBER_NUM,A.NAME,A.EMAIL_ADDRESS,A.GENDER,A.IDENTITY,B.CARD_NUM,B.TRAN_CATE_NUM,B.DATE_OF_USE,B.AMOUNT_OF_BUSI,C.LARGE_CATE,C.MIDDLE_CATE,C.SMALL_CATE,C.ALI_TYPE 
FROM 
CUSTOMER_INFO A,
TRAN_INFO B,
TRAN_VIEW C
WHERE A.MEMBER_NUM = B.MEMBER_NUM AND B.TRAN_CATE_NUM=C.TRAN_CATE_NUM) B
WHERE A.MEMBER_NUM = B.MEMBER_NUM 
AND TO_DATE(DATE_OF_USE,'YYYY-MM-DD HH24:MI:SS') BETWEEN ADD_MONTHS(TRUNC(SYSDATE,'MM'),-3) AND LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE,'MM'),-1)) 
GROUP BY B.SMALL_CATE,A.CLUSTERED 
ORDER BY AMOUNT_OF_BUSI DESC;


SELECT COUNT(*) FROM TRAN_INFO; 


SELECT * FROM CLUSTERED_STATIC_VIEW;


SELECT * FROM CLUSTERED_STATIC_VIEW;

SELECT * FROM CLUSTERED_STATIC_VIEW WHERE CLUSTERED=1 ORDER BY COUNT DESC;

--DROP MATERIALIZED VIEW CLUSTERED_STATIC_VIEW2;

CREATE MATERIALIZED VIEW CLUSTERED_STATIC_VIEW2
BUILD IMMEDIATE
REFRESH ON DEMAND COMPLETE AS 
SELECT CLUSTERED,ROUND(SUM(B.AMOUNT_OF_BUSI)/3)/COUNT(DISTINCT A.MEMBER_NUM) AS AVERAGE_SUM FROM 
(SELECT * 
FROM CLUSTERED_CUSTOMER) A,
(SELECT B.MEMBER_NUM,A.NAME,A.EMAIL_ADDRESS,A.GENDER,A.IDENTITY,B.CARD_NUM,B.TRAN_CATE_NUM,B.DATE_OF_USE,B.AMOUNT_OF_BUSI,C.LARGE_CATE,C.MIDDLE_CATE,C.SMALL_CATE,C.ALI_TYPE 
FROM 
CUSTOMER_INFO A,
TRAN_INFO B,
TRAN_VIEW C
WHERE A.MEMBER_NUM = B.MEMBER_NUM AND B.TRAN_CATE_NUM=C.TRAN_CATE_NUM) B
WHERE A.MEMBER_NUM = B.MEMBER_NUM
AND TO_DATE(DATE_OF_USE,'YYYY-MM-DD HH24:MI:SS') BETWEEN ADD_MONTHS(TRUNC(SYSDATE,'MM'),-3) AND LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE,'MM'),-1))
GROUP BY CLUSTERED;

SELECT A.CLUSTERED,B.SMALL_CATE,ROUND(SUM(B.AMOUNT_OF_BUSI)/3) AS AMOUNT_OF_BUSI,COUNT(B.SMALL_CATE) AS COUNT FROM  
(SELECT * 
FROM CLUSTERED_CUSTOMER) A, CARD_CONSUMPTION_HISTORY B
WHERE A.MEMBER_NUM = B.MEMBER_NUM 
AND TO_DATE(DATE_OF_USE,'YYYY-MM-DD HH24:MI:SS') BETWEEN ADD_MONTHS(TRUNC(SYSDATE,'MM'),-3) AND LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE,'MM'),-1)) 
GROUP BY B.SMALL_CATE,A.CLUSTERED 
ORDER BY AMOUNT_OF_BUSI DESC;

SELECT * FROM ANNUAL_FEE;
SELECT LPAD(MAX(TO_NUMBER(SUBSTR(CARD_CATE_NUM,3))),5,'0') AS CARD_SUFFIX FROM CARD_INFO WHERE SORT_CARD = '체크 카드';
SELECT * FROM CARD_INFO;
SELECT LPAD(MAX(TO_NUMBER(SUBSTR(CARD_SEG_NUM,3))),5,'0') AS CARD_SEG_SUFFIX FROM CARD_INFO;


SELECT * FROM CARD_IMG;
DELETE FROM CARD_IMG WHERE CARD_CATE_NUM='MU00007';

SELECT * FROM CARD_INFO ORDER BY CARD_CATE_NUM;
DELETE FROM CARD_INFO WHERE CARD_NAME= '사랑하는 하나 금융';

SELECT * FROM CARD_BENE ORDER BY CARD_CATE_NUM;
SELECT * FROM CARD_COMMENT ORDER BY CARD_CATE_NUM;
DELETE FROM CARD_COMMENT WHERE COMMENT_OF_CARD = '사랑합니다'; 
COMMIT;
SELECT * FROM CARD_BENE;
DELETE FROM CARD_BENE WHERE CARD_CATE_NUM = 'MU00007';
COMMIT;

SELECT * FROM CARD_COMMENT ORDER BY CARD_CATE_NUM;
COMMIT;

SELECT LPAD(MAX(TO_NUMBER(SUBSTR(CARD_CATE_NUM,3))+1),5,'0') AS CARD_SUFFIX FROM CARD_INFO WHERE SORT_CARD = '멀티 카드'
SELECT * FROM CARD_INFO;

SELECT * FROM CUSTOMER_INFO;
SELECT COUNT(*) FROM TRAN_INFO;
SELECT * FROM CUSTOMER_INFO ORDER BY MEMBER_NUM;

SELECT * FROM TRAN_INFO ORDER BY TRAN_NUM;
SELECT * FROM CUSTOMER_CARD_INFO ORDER BY MEMBER_NUM;


SELECT * FROM ALI_INFO;

SELECT * FROM CUSTOMER_INFO;

SELECT * FROM CUSTOMER_CARD_INFO WHERE MEMBER_NUM=188;
UPDATE CUSTOMER_CARD_INFO SET MEMBER_NUM=168 WHERE MEMBER_NUM=188;
COMMIT;
SELECT * FROM TRAN_INFO WHERE MEMBER_NUM=168;
UPDATE TRAN_INFO SET MEMBER_NUM = 168 WHERE MEMBER_NUM=188;

SELECT * FROM CUSTOMER_INFO;
